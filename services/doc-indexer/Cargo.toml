[package]
name = "doc-indexer"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "doc-indexer"
path = "src/main.rs"

[lib]
name = "doc_indexer"
path = "src/lib.rs"

[features]
default = ["embedded"]
embedded = ["rusqlite", "ort", "tokenizers", "ndarray", "bincode", "serde_rusqlite", "lru", "dirs"]
cloud = ["qdrant-client", "tonic", "reqwest"]
full = ["embedded", "cloud"]

[dependencies]
# Zero-Latency shared crates
zero-latency-core = { path = "../../crates/zero-latency-core" }
zero-latency-search = { path = "../../crates/zero-latency-search" }
zero-latency-vector = { path = "../../crates/zero-latency-vector" }
zero-latency-observability = { path = "../../crates/zero-latency-observability" }
zero-latency-config = { path = "../../crates/zero-latency-config" }
zero-latency-contracts = { path = "../../crates/zero-latency-contracts" }

# File watching
notify = "6.1"
walkdir = "2.4"

# Vector database and embeddings
qdrant-client = { version = "1.15", optional = true }
tonic = { version = "0.12", optional = true }
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.0", features = ["v4", "serde"] }

# Text processing
md5 = "0.7"
pulldown-cmark = "0.10"
chrono = { version = "0.4", features = ["serde"] }
xxhash-rust = { version = "0.8", features = ["xxh3"] }
sha2 = "0.10"
regex = "1.10"

# HTTP client for embeddings (cloud feature)
reqwest = { version = "0.12", features = ["json", "rustls-tls"], optional = true }

# HTTP server for search API
axum = { version = "0.7", features = ["json"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "fs", "trace", "timeout"] }
futures-util = "0.3"
async-stream = "0.3"

# Configuration management
toml = "0.8"

# JSON-RPC
jsonrpc-core = "18.0"
jsonrpc-http-server = "18.0"

# Rate limiting
governor = "0.6"
rand = "0.8"

# Logging and config
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] }
tracing-opentelemetry = "0.22"
opentelemetry = "0.21"
opentelemetry_sdk = { version = "0.21", features = ["rt-tokio"] }
opentelemetry-jaeger = { version = "0.20", features = ["rt-tokio"] }
opentelemetry-prometheus = "0.14"
opentelemetry-semantic-conventions = "0.13"
prometheus = "0.13"
anyhow = "1.0"
thiserror = "1.0"
clap = { version = "4.0", features = ["derive", "env"] }

# Async utilities
async-trait = "0.1"
futures = "0.3"
tokio-stream = "0.1"

# System information and monitoring (Phase 4D)
num_cpus = "1.16"
sysinfo = "0.30"

# Local embeddings (embedded feature)
ort = { version = "1.16", features = ["download-binaries"], optional = true }  # ONNX Runtime with bundled libraries
tokenizers = { version = "0.15", optional = true }
lru = { version = "0.12", optional = true }
ndarray = { version = "0.15", optional = true }
dirs = { version = "5.0", optional = true }  # For home directory detection

# Embedded vector storage (embedded feature)
rusqlite = { version = "0.29", features = ["bundled", "blob"], optional = true }
serde_rusqlite = { version = "0.32", optional = true }
bincode = { version = "1.3", optional = true }  # For efficient vector serialization

[dev-dependencies]
tempfile = "3.0"
mockall = "0.11"
tokio-test = "0.4"

# For HTTP requests in integration tests
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
