version: '3.8'

services:
  docsearch:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: docsearch-app
    ports:
      - "8080:8080"  # HTTP API
      - "8081:8081"  # JSON-RPC
    environment:
      - RUST_LOG=info
      - DOCSEARCH_CONFIG_PATH=/app/config/production.toml
      - DOCSEARCH_DATA_PATH=/app/data
      - DOCSEARCH_LOG_PATH=/app/logs
    volumes:
      - docsearch_data:/app/data
      - docsearch_logs:/app/logs
      - ./docker/config:/app/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - docsearch-network

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: docsearch-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - docsearch-network
    profiles:
      - monitoring

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: docsearch-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana:/etc/grafana/provisioning:ro
    networks:
      - docsearch-network
    profiles:
      - monitoring

networks:
  docsearch-network:
    driver: bridge

volumes:
  docsearch_data:
    driver: local
  docsearch_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
